<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ts:token xmlns:ts="http://tokenscript.org/2024/01/tokenscript"
		  xmlns:xml="http://www.w3.org/XML/1998/namespace"
		  xsi:schemaLocation="http://tokenscript.org/2024/01/tokenscript https://www.tokenscript.org/schemas/2024-01/tokenscript.xsd"
		  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		  xmlns:ethereum="urn:ethereum:constantinople"
		  name="PomPom">
	<ts:label>
		<ts:plurals xml:lang="en">
			<ts:string quantity="one">PomPom Token</ts:string>
			<ts:string quantity="other">PomPom Tokens</ts:string>
		</ts:plurals>
	</ts:label>
    	<ts:meta>
        <ts:description xml:lang="en">
            Physical Goods Token: More inclusive, further reduces friction in trading physical goods.
        </ts:description>
		<ts:iconUrl xml:lang="en">https://ipfs.io/ipfs/QmWbWvbNTqe46A5GoZ3PyDWshFWD9Xe4mpk6Y1Vpso96Yv</ts:iconUrl>
    </ts:meta>
    <ts:contract interface="erc721" name="Token">
        <ts:address network="11155111">0xA0343dfd68FcD7F18153b8AB87936c5A9C1Da20e</ts:address>
    </ts:contract>
    <ts:contract name="DVP">
        <ts:address network="11155111">0x84759f034fEa769052B19f9b5bE94678E0426107</ts:address>
        <ts:abi>
			<![CDATA[
			[
				{
				  "inputs": [
					{
					  "internalType": "address",
					  "name": "tokenContract",
					  "type": "address"
					},
                    {
                      "internalType": "uint256",
					  "name": "tokenId",
					  "type": "uint256"
                    }
				  ],
				  "name": "purchaseNFT",
				  "outputs": [
					
				  ],
				  "stateMutability": "nonpayable",
				  "type": "function"
				}
			]
			]]>
		</ts:abi>
    </ts:contract>
    <ts:origins>
        <ts:ethereum contract="Token"/>
    </ts:origins>
	<ts:cards>
		<!-- Transfer NFT Card -->
        <ts:card type="action" name="transfer" buttonClass="primary" origins="Token">
            <ts:label>
                <ts:string xml:lang="en">
                    Transfer Pom Pom
                </ts:string>
            </ts:label>
            <ts:transaction>
                <ethereum:transaction contract="Token" function="transferFrom">
                    <ts:data>
                        <ts:address ref="ownerAddress"/>
                        <ts:address ref="to"/>
                        <ts:uint256 ref="tokenId"/>
                    </ts:data>
                </ethereum:transaction>
            </ts:transaction>
            <ts:view xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
                <p>Transfer your Pom Pom to another address by providing the recipient's address and the Pom Pom ID.</p>
                <input type="text" id="to" value="Recipient Address"/>
            </ts:view>
        </ts:card>

        <ts:card type="action" name="ship" buttonClass="primary" origins="Token">
            <ts:label>
                <ts:string xml:lang="en">
                    Ship Pom Pom
                </ts:string>
            </ts:label>
        
            <ts:transaction>
                <ethereum:transaction contract="DVP" function="deliver" >
                    <ts:data>
                        <ts:address>0xA0343dfd68FcD7F18153b8AB87936c5A9C1Da20e</ts:address>
                        <ts:uint256 ref="tokenId"/>
                        <ts:string ref="addressEntry"/>
                        <ts:uint256 ref="shippingCost"/>
                    </ts:data>
                </ethereum:transaction>
            </ts:transaction>
			<ts:view xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
				<ts:include type="html" src="./ship.html" />
            </ts:view>
            
        </ts:card>

        <ts:card type="action" name="mint" buttonClass="primary" origins="Token">
        <ts:label>
            <ts:string xml:lang="en">Mint</ts:string>
        </ts:label>
        <ts:transaction>
                <ethereum:transaction contract="Token" function="safeMint">
                    <ts:data>
                        <ts:uint256>10000</ts:uint256>
                        <ts:string> </ts:string>
                    </ts:data>
                </ethereum:transaction>
            </ts:transaction>
        </ts:card>

        <ts:card type="action" name="listForSale" buttonClass="primary">
            <ts:label>
                <ts:string xml:lang="en">
                    List Pom Pom
                </ts:string>
            </ts:label>

            <ts:transaction>
                <ethereum:transaction contract="DVP" function="listToDVP" >
                    <ts:data>
                        <ts:address>0xA0343dfd68FcD7F18153b8AB87936c5A9C1Da20e</ts:address>
                        <ts:uint256 ref="tokenId"/>
                        <ts:uint256 ref="tokenPrice"/>
                        <ts:uint32 ref="expiryTime"/>
                    </ts:data>
                </ethereum:transaction>
            </ts:transaction>
			<ts:view xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
				<ts:include type="html" src="./list.html" />
            </ts:view>
            
        </ts:card>

        <ts:card type="action" name="refund" buttonClass="primary" origins="Token">
            <ts:label>
                <ts:string xml:lang="en">
                    Refund Pom Pom
                </ts:string>
            </ts:label>
            <ts:transaction>
                <ethereum:transaction function="refund" contract="DVP">
                    <ts:data>
                        <ts:address>0xA0343dfd68FcD7F18153b8AB87936c5A9C1Da20e</ts:address>
                        <ts:uint256 ref="tokenId"/>
                    </ts:data>
                </ethereum:transaction>
            </ts:transaction>
            <ts:view xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
                <ts:include type="html" src="./refund.html" />
            </ts:view>
        </ts:card>

        <ts:card type="onboarding" name="purchase" buttonClass="primary">
            <ts:label>
                <ts:string xml:lang="en">
                    Purchase Pom Pom
                </ts:string>
            </ts:label>
        
            <ts:transaction>
                <ethereum:transaction contract="DVP" function="purchaseNFT" >
                    <ts:data>
                        <ts:address>0xA0343dfd68FcD7F18153b8AB87936c5A9C1Da20e</ts:address>
                        <ts:uint256 ref="purchaseTokenId"/>
                    </ts:data>
                </ethereum:transaction>
            </ts:transaction>
			<ts:view xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
				<ts:include type="html" src="./purchase.html" />
            </ts:view>
            
        </ts:card>

	</ts:cards>

    <ts:attribute name="purchaseTokenId">
		<ts:type><ts:syntax>1.3.6.1.4.1.1466.115.121.1.27</ts:syntax></ts:type>
		<ts:origins>
			<ts:user-entry as="uint" />
		</ts:origins>
	</ts:attribute>

    <ts:attribute name="addressEntry">
		<ts:type><ts:syntax>1.3.6.1.4.1.1466.115.121.1.36</ts:syntax></ts:type>
			<ts:origins>
				<ts:user-entry as="address"/>
			</ts:origins>
	</ts:attribute>

    <ts:attribute name="shippingCost">
		<ts:type><ts:syntax>1.3.6.1.4.1.1466.115.121.1.27</ts:syntax></ts:type>
		<ts:origins>
			<ts:user-entry as="uint" />
		</ts:origins>
	</ts:attribute>      

    <ts:attribute name="tokenPrice">
		<ts:type><ts:syntax>1.3.6.1.4.1.1466.115.121.1.27</ts:syntax></ts:type>
		<ts:origins>
			<ts:user-entry as="uint" />
		</ts:origins>
	</ts:attribute> 

    <ts:attribute name="expiryTime">
		<ts:type><ts:syntax>1.3.6.1.4.1.1466.115.121.1.27</ts:syntax></ts:type>
		<ts:origins>
			<ts:user-entry as="uint" />
		</ts:origins>
	</ts:attribute>   

</ts:token>
